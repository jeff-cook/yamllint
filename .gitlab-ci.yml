variables:
  IMAGE_LAST_SUCCESS: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:latest
  IMAGE_COMMIT: $CI_REGISTRY_IMAGE/commit:$CI_COMMIT_SHA
  IMAGE_PUSH: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:latest

include:
  - project: 'jeff_cook/microscanner'
    ref: master
    file: '/.gitlab-ci/.gitlab-ci.yml'

stages:
  - debug
  - pre_build
  - build
  - post_build
  - test
  - pre_deliver
  - deliver
  - post_deliver
  - pre_deploy
  - deploy
  - post_deploy

# debug:
#   stage: debug
#   services:
#     - docker:stable-dind
#   image: docker:stable
#   script:
#     - env
#     - docker info

.docker_login:
  image: docker:stable
  services:
    - docker:stable-dind
  tags:
    - docker
  before_script:
    - docker --version
    # - docker info | grep ersion
    - echo $CI_JOB_TOKEN | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY

build_image:
  stage: build
  extends: .docker_login
  script:
    # # Skip if commit image already exists
    # - docker image list $IMAGE_COMMIT && exit
    - docker pull $IMAGE_LAST_SUCCESS || true
    - docker build  --cache-from $IMAGE_LAST_SUCCESS --tag $IMAGE_COMMIT .
    - docker push $IMAGE_COMMIT

verify_image:
  stage: post_build
  image:
    name: $IMAGE_COMMIT
    entrypoint: [""]
  script:
    - yamllint --help


trivy:
  stage: post_build
  image:
    name: aquasec/trivy
    entrypoint: [""]
  variables:
    TRIVY_EXIT_CODE: '1'  
    TRIVY_NO_PROGRESS: 'true'
    # TRIVY_TEMPLATE: "@contrib/gitlab.tpl"
    # TRIVY_FORMAT: template
    # TRIVY_OUTPUT: gl-container-scanning-report.json
    TRIVY_USERNAME: $CI_REGISTRY_USER
    TRIVY_PASSWORD: $CI_JOB_TOKEN 
  script:
    - trivy $IMAGE_COMMIT
  artifacts:
    untracked: true


.docker_push_image:
  stage: deliver
  extends: .docker_login
  script:
    - docker pull $IMAGE_COMMIT
    - docker tag $IMAGE_COMMIT  $IMAGE_PUSH
    - docker push $IMAGE_PUSH

latest_image:
  stage: deliver
  extends: .docker_push_image

deploy_master-latest_image:
  stage: deliver
  variables:
    IMAGE_PUSH: $CI_REGISTRY_IMAGE:latest
  only:
    refs:
      - master
  extends: .docker_push_image

deploy_stable_image:
  stage: deliver
  variables:
    IMAGE_PUSH: $CI_REGISTRY_IMAGE:stable
  only:
    refs:
      - stable
  extends: .docker_push_image
